Question #2: Array Deduping
Write an algorithm that removes duplicates from an array. Do not use a function like filter() to solve this. Once you have solved the problem, demonstrate how it can be solved with filter(). Solve the problem with and without recursion.

Example
Input: [7, 9, "hi", 12, "hi", 7, 53]

Output: [7, 9, "hi", 12, 53]
______________________________________________

//create an empty array to store unique elements
// run for loop through ann array 
//if array doesnt have duplicates push it to unique


let array = [7, 9, "hi", 12, "hi", 7, 53]

const removeDuplicates = (array) => {
  let unique = [];
  for (let i = 0; i < array.length; i++) {
    if (!unique.includes(array[i])) {
      unique.push(array[i])
    }
  }
  return unique;
}

console.log(removeDuplicates(array))


________________________________________
with filter()

const filterMethod = (array) => {
  return array.filter((element, index) => array.indexOf(element) === index);
}

console.log(filterMethod([7, 9, "hi", 12, "hi", 7, 53])); 

______________________________________________
with recursion (not positive if its a clean way to do it)


//create an empty array
//create index counter to go through given array
//if array doesnt have duplicates push it to unique
//going to next index
//invoke function removeDuplicates again
//return array unique
//invoke function removeDuplicates again


const removeStoredDuplicates = () => {
  const unique = []
  let index = 0
  return function removeDuplicates(array) {
    if (!unique.includes(array[index])) {
      unique.push(array[index])
      index++
      return removeDuplicates(array)
    }
    return unique
  }
}
const removeDuplicates = removeStoredDuplicates()

console.log(removeDuplicates([7, 9, "hi", 12, "hi", 7, 53]))




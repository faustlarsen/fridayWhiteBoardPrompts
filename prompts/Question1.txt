URLs cannot have spaces. Instead, all spaces in a string are replaced with %20. Write an algorithm that replaces all spaces in a string with %20.

You may not use the replace() method or regular expressions to solve this problem. Solve the problem with and without recursion.

Example
Input: "Jasmine Ann Jones"
Output: "Jasmine%20Ann%20Jones"
______________________________________________

Pseudocode
//check if it is a string, if not return error
//split string into array
//join array with %20
//return array


let str = 'Jasmine Ann Jones';

const spaceReplace = (str) => {
  if (typeof str != 'string') {      //typeof is operator
  return 'Its not a string';
} 
  const array = str.split(' ');    //splits string into array with 3 separate indexes
  return array.join('%20');        //join array back into a string with %20 instead of space
}

console.log(spaceReplace(str));

var array = ["Jasmine", "Ann", "Jones"];
array.join(); // "Jasmine,Ann,Jones"
array.join("-"); // "Jasmine-Ann-Jones"
array.join(""); // "JasmineAnnJones"
array.join(". "); // "Jasmine. Ann. Jones"

______________________________________________

with recursion
